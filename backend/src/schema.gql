# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthToken {
  accessToken: String
  refreshToken: String
}

type AuthTokenResponse {
  authToken: AuthToken
  user: User
}

type CategoryBrands {
  brands: [String!]!
  category: String!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateReviewProductInput {
  comment: String!
  rating: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUserInput {
  password: String!
  usernameOrEmail: String!
}

type MessageError {
  message: String!
}

type Mutation {
  activate(token: String!): AuthTokenResponse!
  autoRefresh: AuthTokenResponse!
  changePassword(input: ChangePasswordInput!): UserResponse!
  forgotPassword(email: String!): TokenResponse!
  login(input: LoginUserInput!): AuthTokenResponse!
  logout: Boolean!
  refresh: AuthTokenResponse!
  register(input: RegisterUserInput!): TokenResponse!
  resetPassword(input: ResetPasswordInput!): UserResponse!
  reviewProduct(input: CreateReviewProductInput!, productId: String!): Product!
  updateProfile(input: UpdateProfileInput!): UserResponse!
}

type PaginatedProduct {
  count: Int!
  products: [Product!]!
}

input PaginationInput {
  limit: Int
  page: Int
}

type Product {
  _id: ID!
  brand: String!
  category: String!
  countInStock: Int!
  createdAt: DateTime!
  description: String!
  image: String!
  name: String!
  numReviews: Int!
  price: Float!
  rating: Int!
  reviews: [Review!]!
  updatedAt: DateTime!
  user: User!
}

type Query {
  allCategories: [String!]!
  brandsByCategory(category: String!): [String!]!
  categoryBrands: [CategoryBrands!]!
  findProductById(_id: String!): Product!
  latestProducts(limit: Int): [Product!]!
  me: UserResponse!
  products(pagination: PaginationInput): PaginatedProduct!
  productsByBrand(brand: String!, pagination: PaginationInput): PaginatedProduct!
  productsByCategory(category: String!, pagination: PaginationInput): PaginatedProduct!
  productsOfBrandByCategory(brand: String!, category: String!, pagination: PaginationInput): PaginatedProduct!
  queryProducts(pagination: PaginationInput, q: String!): PaginatedProduct!
  topProducts(limit: Int): [Product!]!
}

input RegisterUserInput {
  avatar: String
  email: String!
  fullName: String
  password: String
  username: String!
}

input ResetPasswordInput {
  newPassword: String!
  token: String!
}

type Review {
  _id: ID!
  comment: String!
  createdAt: DateTime!
  rating: Int!
  reviewerName: String!
  updatedAt: DateTime!
  user: User!
}

type TokenResponse {
  token: String
}

input UpdateProfileInput {
  avatar: String
  email: String
  fullName: String
  username: String
}

type User {
  _id: ID!
  avatar: String
  createdAt: DateTime!
  email: String!
  fullName: String
  role: String
  updatedAt: DateTime!
  username: String!
}

type UserResponse {
  error: MessageError
  user: User
}